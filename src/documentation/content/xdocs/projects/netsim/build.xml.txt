
<!-- 
  build.xml for SSFNet testing
    $Date: 2009-08-12 12:15:37 +0200 (Wed, 12 Aug 2009) $
    $Revision: 2355 $
    $Author: lrutten $
  -->
<project name="netsim" default="info" basedir=".">

    <target name="info" >
      <echo>
  This script compiles and runs  the AspectJ SSFNet tests.  

  The tasks in ../../lib/aspectjtools.jar are used automatically.
      </echo>
    </target>

    <!-- ============================================================= -->
    <!-- setup and cleanup targets                                     -->
    <!-- ============================================================= -->

    <target name="init"  depends="init.variables,init.taskdefs"/>

    <target name="init.variables" 
     description="init variables">
     
      <!-- build.compiler value to pick up our CompilerAdapter for javac -->
      <property name="ajc.adapter"
	           value="org.aspectj.tools.ant.taskdefs.Ajc11CompilerAdapter"/>

      <!-- required directories - run from examples or predefine -->
      <property name="example.dir"       location="${basedir}"/> 
      <property name="aspectj.lib.dir"   location="/export/usr/local/aspectj/lib"/> 

      <!-- required libraries - install or predefine -->
      <property name="aspectjrt.jar"     location="${aspectj.lib.dir}/aspectjrt.jar"/> 
      <property name="aspectjtools.jar"  location="${aspectj.lib.dir}/aspectjtools.jar"/> 

      <!-- created directories -->
      <property name="classes.dir"       location="${example.dir}/classes"/> 
      <property name="jar.dir"           location="${example.dir}/jars"/> 

      <!-- checking required libraries -->
      <available file="${aspectjtools.jar}" property="aspectjtools.jar.available"/>
      <available file="${aspectjrt.jar}"    property="aspectjrt.jar.available"/>

      <property name="example.packages"
               value="bean, coordination, evolution, figures, figures.gui,
                      helloworld, icount, icount.lib, introduction,
                      observer, shadow, shadow.version1, shadow.version2,
                      spacewar, telecom, telecom.version1, timeserver, tjp,
                      tracing, tracing.lib tracing.version1, tracing.version2,
                      tracing.version3"/>
    </target>

    <target name="init.taskdefs" depends="init.variables, 
         aspectjtools.jar.available,
         aspectjrt.jar.available"
         unless="taskdefs.init">
      <!-- sets name of new task to iajc, old task to ajc -->
      <taskdef resource="org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties">
          <classpath> 
            <pathelement path="${aspectjtools.jar}"/> 
          </classpath>
      </taskdef>
	   <property name="taskdefs.init" value="true"/>
    </target>

    <target name="clean" depends="init"
     description="clean and create classes/jar dir, .ajesym files">
      <delete quiet="on" dir="${classes.dir}"/>
      <delete quiet="on" dir="${jar.dir}"/>
      <!-- 
      <delete quiet="on">
        <fileset dir="${example.dir}" includes="**/*.ajesym"/>
      </delete>
      -->
      <mkdir dir="${classes.dir}"/>
      <mkdir dir="${jar.dir}"/>
    </target>

    <!-- targets to fail unless required libraries available -->

    <target name="aspectjrt.jar.available" depends="init.variables" 
          unless="aspectjrt.jar.available" >
      <fail message="expecting aspectjrt.jar at ${aspectjrt.jar}"/>
    </target>

    <target name="aspectjtools.jar.available" depends="init.variables" 
          unless="aspectjtools.jar.available" >
      <fail message="expecting aspectjtools.jar at ${aspectjtools.jar}"/>
    </target>

    <!-- ============================================================= -->
    <!-- these targets compile and run any example                     -->
    <!-- ============================================================= -->
    <target name="ajc-compile-run" depends="init"
     description="compile and run TwoHost example">
       <echo message="##### ajc-compile-run" />
       <antcall target="clean" />
       
       <!-- can use ajc or iajc here -->
       <iajc destdir="${classes.dir}"
             incremental="false"
             verbose="true">
         <classpath>
           <pathelement path="${aspectjrt.jar}"/>
           <pathelement path="${basedir}/lib/raceway.jar"/>
         </classpath>
         <sourceroots>
           <pathelement path="${example.dir}/src/be/khlim/iwt/inf"/>
         </sourceroots>
       </iajc>

       <antcall target="ajc-run" >
         <param name="class" value="Logging"/>
       </antcall>
    </target>

    <target name="ajc-compile-ssf" depends="init"
     description="compile and run complete SSFNet">
       <echo message="##### ajc-compile-ssf" />
       <antcall target="clean" />
       
       <iajc destdir="${classes.dir}"
             incremental="false"
             verbose="true"
             proceedOnError="true"
             progress="true"
             log="iajc.log">
         <classpath>
           <pathelement path="${aspectjrt.jar}"/>
           <pathelement path="${basedir}/lib/raceway.jar"/>
           <pathelement path="${basedir}/lib/regexp.jar"/>
           <pathelement path="${basedir}/lib/plot.jar"/>
           <pathelement path="${basedir}/lib/plotapplication.jar"/>
         </classpath>
         
         <argfiles>
           <pathelement path="ssf.lst"/>
         </argfiles>
      <!--   
        this doesn't seem to work
        produces 'Type xxxx is already defined'
         <sourceroots>
           <pathelement path="${example.dir}/src/be/khlim/iwt/inf"/>
           <pathelement path="src/SSF/App/DDoS"/>
           <pathelement path="src/SSF/App/Worm"/>
           <pathelement path="src/SSF/App/Worm/test"/>
           <pathelement path="src/SSF/Net/Util"/>
           <pathelement path="src/SSF/Net"/>
           <pathelement path="src/SSF/OS/BGP4"/>
           <pathelement path="src/SSF/OS/BGP4/Comm/"/>
           <pathelement path="src/SSF/OS/BGP4/Path/"/>
           <pathelement path="src/SSF/OS/BGP4/Players/"/>
           <pathelement path="src/SSF/OS/BGP4/Policy/"/>
           <pathelement path="src/SSF/OS/BGP4/Timing/"/>
           <pathelement path="src/SSF/OS/BGP4/Util/"/>
           <pathelement path="src/SSF/OS/BGP4/Widgets/"/>
           <pathelement path="src/SSF/OS/BGP4/test/App"/>
           <pathelement path="src/SSF/OS/BGP4/test/propagation/src"/>
           <pathelement path="src/SSF/OS/BGP4/test/reflection/src"/>
           <pathelement path="src/SSF/OS/BGP4/test/select/src"/>
           <pathelement path="src/SSF/OS/BGP4/test/withdrawals/src"/>
           <pathelement path="src/SSF/OS/OSPF"/>
           <pathelement path="src/SSF/OS"/>
           <pathelement path="src/SSF/OS/NetFlow/Filter/"/>
           <pathelement path="src/SSF/OS/NetFlow/"/>
           <pathelement path="src/SSF/OS/NetFlow/Util/"/>
           <pathelement path="src/SSF/OS/OSPFv2/test/"/>
           <pathelement path="src/SSF/OS/OSPFv2/"/>
           <pathelement path="src/SSF/OS/Socket/"/>
           <pathelement path="src/SSF/OS/TCP/test/"/>
           <pathelement path="src/SSF/OS/TCP/test/resetTest/"/>
           <pathelement path="src/SSF/OS/TCP/test/spoofTest/"/>
           <pathelement path="src/SSF/OS/TCP/"/>
           <pathelement path="src/SSF/OS/UDP/test/"/>
           <pathelement path="src/SSF/OS/UDP/"/>
           <pathelement path="src/SSF/OS/WWW/"/>
           <pathelement path="src/SSF/Util/Plot/"/>
           <pathelement path="src/SSF/Util/Plot/test/"/>
           <pathelement path="src/SSF/Util/Random/"/>
           <pathelement path="src/SSF/Util/Streams/example/"/>
           <pathelement path="src/SSF/Util/Streams/"/>
           <pathelement path="src/cern/colt/bitvector/"/>
           <pathelement path="src/cern/colt/"/>
           <pathelement path="src/cern/colt/buffer/"/>
           <pathelement path="src/cern/colt/function/"/>
           <pathelement path="src/cern/colt/list/adapter/"/>
           <pathelement path="src/cern/colt/list/"/>
           <pathelement path="src/cern/jet/math/"/>
           <pathelement path="src/cern/jet/random/engine/"/>
           <pathelement path="src/cern/jet/random/"/>
           <pathelement path="src/cern/jet/random/sampling/"/>
           <pathelement path="src/cern/jet/stat/quantile/"/>
           <pathelement path="src/cern/jet/stat/"/>
           <pathelement path="src/com/imsl/math/"/>
           <pathelement path="src/edu/cornell/lassp/houle/RngPack/"/>
         </sourceroots>
      -->
         
         </iajc>

    </target>
    
    <target name="run-ssfnet" depends="init"
     description="run SSFNet">
       <echo message="##### run SSF.Net.Net" />
       <java classname="SSF.Net.Net" fork="yes"> 
          <classpath>
           <pathelement path="classes"/>
           <pathelement path="${aspectjrt.jar}"/>
           <pathelement path="${basedir}/lib/raceway.jar"/>
          </classpath>
          <arg value="200"/>
          <arg value="dml/client-server-1.dml"/>
       </java>
    </target>
    
    <target name="ajc-run" 
     description="run {class} unless {norun} is set" 
          unless="norun" >
       <echo message="##### ajc-run be.khlim.iwt.inf.TwoHost" />
       <java classname="${class}" fork="yes">
          <classpath>
           <pathelement path="${classes.dir}"/>
           <pathelement path="${aspectjrt.jar}"/>
           <pathelement path="${basedir}/lib/raceway.jar"/>
          </classpath>
       </java>
    </target>


</project>
